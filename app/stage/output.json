{
	"id": 0,
	"name": "query-registry",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"comment": {
		"shortText": "This package exports several functions to query\nthe {@link https://www.npmjs.com | npm registry}\n(or one of its mirrors) through one of its\n{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md | endpoints}.",
		"tags": [
			{
				"tag": "example",
				"text": "\nGet the metadata for the npm registry:\n\n```typescript\nimport { getRegistryMetadata } from 'query-registry';\n\n(async () => {\n    const metadata = await getRegistryMetadata();\n\n    // Output: 'registry'\n    console.log(metadata.db_name);\n})();\n```\n"
			},
			{
				"tag": "example",
				"text": "\nGet the latest manifest for package `query-registry` from the npm registry:\n\n```typescript\nimport { getPackageManifest } from 'query-registry';\n\n(async () => {\n    const manifest = await getPackageManifest({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(manifest.name);\n})();\n```\n"
			},
			{
				"tag": "example",
				"text": "\nGet the abbreviated packument for package `query-registry` from the npm registry:\n\n```typescript\nimport { getAbbreviatedPackument } from 'query-registry';\n\n(async () => {\n    const packument = await getAbbreviatedPackument({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(manifest.name);\n})();\n```\n"
			},
			{
				"tag": "example",
				"text": "\nGet the weekly downloads for package `query-registry` from the npm registry:\n\n```typescript\nimport { getPackageDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getPackageDownloads({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(downloads.package);\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads);\n})();\n```\n"
			},
			{
				"tag": "example",
				"text": "\nGet the search results for text query `query-registry` from the npm registry:\n\n```typescript\nimport { searchPackages } from 'query-registry';\n\n(async () => {\n    const results = await searchPackages({ query: { text: 'query-registry' } });\n\n    // Output: 'query-registry'\n    console.log(results.objects[0].package.name);\n})();\n```\n"
			},
			{
				"tag": "example",
				"text": "\nEnable {@link https://www.npmjs.com/package/debug | debug messages}\nby setting the `DEBUG` environment variable to `query-registry`\n(available only in non production environments):\n\n```bash\n$ DEBUG=\"query-registry\"\n```\n"
			}
		]
	},
	"originalName": "",
	"children": [
		{
			"id": 427,
			"name": "FetchError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "`FetchError` represents an error that happened when fetching a URL.",
				"text": "The `instanceof` operator can be used to check for this error.\n"
			},
			"children": [
				{
					"id": 438,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/utils/errors.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "new FetchError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 440,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 441,
									"name": "response",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Response",
										"package": ".pnpm",
										"name": "Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 427,
								"name": "FetchError"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseError.constructor"
					}
				},
				{
					"id": 444,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/node_modules/.pnpm/make-error@1.3.6/node_modules/make-error/index.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseError.message"
					}
				},
				{
					"id": 445,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/node_modules/.pnpm/make-error@1.3.6/node_modules/make-error/index.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseError.name"
					}
				},
				{
					"id": 443,
					"name": "response",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"qualifiedName": "Response",
						"package": ".pnpm",
						"name": "Response"
					}
				},
				{
					"id": 446,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/node_modules/.pnpm/make-error@1.3.6/node_modules/make-error/index.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseError.stack"
					}
				},
				{
					"id": 442,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 432,
					"name": "prepareStackTrace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@17.0.8/node_modules/@types/node/globals.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 433,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 434,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 435,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": ".pnpm",
												"name": "Error"
											}
										},
										{
											"id": 436,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": ".pnpm",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseError.prepareStackTrace"
					}
				},
				{
					"id": 437,
					"name": "stackTraceLimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@17.0.8/node_modules/@types/node/globals.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseError.stackTraceLimit"
					}
				},
				{
					"id": 428,
					"name": "captureStackTrace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 429,
							"name": "captureStackTrace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Create .stack property on a target object"
							},
							"parameters": [
								{
									"id": 430,
									"name": "targetObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 431,
									"name": "constructorOpt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": ".pnpm",
										"name": "Function"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseError.captureStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseError.captureStackTrace"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						438
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						444,
						445,
						443,
						446,
						442,
						432,
						437
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						428
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/utils/errors.ts",
					"line": 8,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "makeError.BaseError",
					"package": ".pnpm",
					"name": "BaseError"
				}
			]
		},
		{
			"id": 100,
			"name": "AbbreviatedPackument",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`AbbreviatedPackument` represents a packument (package document)\ncontaining only the metadata necessary to install a package.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link RawAbbreviatedPackument}\n"
					}
				]
			},
			"children": [
				{
					"id": 106,
					"name": "dist-tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of distribution tags to version numbers",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistTags}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 118,
						"name": "DistTags"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "RawAbbreviatedPackument.dist-tags"
					}
				},
				{
					"id": 103,
					"name": "distTags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of distribution tags to version numbers\n(alias to `dist-tags`)",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistTags}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/abbreviated-packument.ts",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 118,
						"name": "DistTags"
					}
				},
				{
					"id": 101,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Unique package name (for example, `foo` or `@bar/baz`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/abbreviated-packument.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 105,
					"name": "modified",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Timestamp of when the package was last modified\nin ISO 8601 format (for example, `2021-11-23T19:12:24.006Z`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "RawAbbreviatedPackument.modified"
					}
				},
				{
					"id": 102,
					"name": "modifiedAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Timestamp of when the package was last modified\nin ISO 8601 format (for example, `2021-11-23T19:12:24.006Z`);\n(alias to `modified`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/abbreviated-packument.ts",
							"line": 19,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 104,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "RawAbbreviatedPackument.name"
					}
				},
				{
					"id": 107,
					"name": "versions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of version numbers to package manifests",
						"tags": [
							{
								"tag": "see",
								"text": "{@link RawPackageManifest}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 32,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 284,
										"name": "RawPackageManifest"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "version"
											},
											{
												"type": "literal",
												"value": "dist"
											},
											{
												"type": "literal",
												"value": "deprecated"
											},
											{
												"type": "literal",
												"value": "dependencies"
											},
											{
												"type": "literal",
												"value": "optionalDependencies"
											},
											{
												"type": "literal",
												"value": "devDependencies"
											},
											{
												"type": "literal",
												"value": "bundleDependencies"
											},
											{
												"type": "literal",
												"value": "peerDependencies"
											},
											{
												"type": "literal",
												"value": "bin"
											},
											{
												"type": "literal",
												"value": "directories"
											},
											{
												"type": "literal",
												"value": "engines"
											},
											{
												"type": "literal",
												"value": "_hasShrinkwrap"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": ".pnpm",
								"name": "Pick"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "RawAbbreviatedPackument.versions"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						106,
						103,
						101,
						105,
						102,
						104,
						107
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/abbreviated-packument.ts",
					"line": 10,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 279,
					"name": "RawAbbreviatedPackument"
				}
			]
		},
		{
			"id": 108,
			"name": "BugTracker",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`BugTracker` represents the bug tracking methods."
			},
			"children": [
				{
					"id": 110,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/bug-tracker.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 109,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/bug-tracker.ts",
							"line": 5,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						110,
						109
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/bug-tracker.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 136,
			"name": "DailyPackageDownloads",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`DailyPackageDownloads` lists the number of downloads for a package\nfor each day in a given time period.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link DailyRegistryDownloads}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#ranges}\n"
					}
				]
			},
			"children": [
				{
					"id": 138,
					"name": "downloads",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Download counts per day"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 145,
							"name": "DownloadsPerDay"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 142,
						"name": "DailyRegistryDownloads.downloads"
					}
				},
				{
					"id": 140,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the last day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 57,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 144,
						"name": "DailyRegistryDownloads.end"
					}
				},
				{
					"id": 137,
					"name": "package",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 39,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 139,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the first day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 54,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 143,
						"name": "DailyRegistryDownloads.start"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						138,
						140,
						137,
						139
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/downloads.ts",
					"line": 37,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 141,
					"name": "DailyRegistryDownloads"
				}
			]
		},
		{
			"id": 141,
			"name": "DailyRegistryDownloads",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`DailyRegistryDownloads` lists the number of downloads for the registry\nfor each day in a given time period.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link DownloadsPerDay}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#ranges}\n"
					}
				]
			},
			"children": [
				{
					"id": 142,
					"name": "downloads",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Download counts per day"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 145,
							"name": "DownloadsPerDay"
						}
					}
				},
				{
					"id": 144,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the last day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 57,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 143,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the first day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 54,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						142,
						144,
						143
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/downloads.ts",
					"line": 49,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 136,
					"name": "DailyPackageDownloads"
				}
			]
		},
		{
			"id": 124,
			"name": "DateRange",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`DateRange` represents a time period between two days\nwhere the `start` and `end` dates are inclusive.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nconst dateRange = {\n    start: new Date('2019-01-01'),\n    end: new Date('2020-01-01'),\n};\n```\n"
					},
					{
						"tag": "see",
						"text": "{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date}\n"
					}
				]
			},
			"children": [
				{
					"id": 126,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the last day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/download-period.ts",
							"line": 49,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Date",
						"package": ".pnpm",
						"name": "Date"
					}
				},
				{
					"id": 125,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the first day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/download-period.ts",
							"line": 46,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Date",
						"package": ".pnpm",
						"name": "Date"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						126,
						125
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/download-period.ts",
					"line": 44,
					"character": 17
				}
			]
		},
		{
			"id": 111,
			"name": "DistInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`DistInfo` contains data describing the distributed package.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md#dist}\n"
					}
				]
			},
			"children": [
				{
					"id": 115,
					"name": "fileCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Number of files in the tarball"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/dist-info.ts",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 114,
					"name": "integrity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Usually, SHA512 sum of the tarball preceded by `sha512-`"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/dist-info.ts",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 117,
					"name": "npm-signature",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm PGP signature"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/dist-info.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 113,
					"name": "shasum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "SHA1 sum of the tarball"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/dist-info.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 112,
					"name": "tarball",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Tarball URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/dist-info.ts",
							"line": 8,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 116,
					"name": "unpackedSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Total size in bytes of the unpacked files in the tarball"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/dist-info.ts",
							"line": 20,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						115,
						114,
						117,
						113,
						112,
						116
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/dist-info.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 118,
			"name": "DistTags",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`DistTags` maps distribution tags to version numbers."
			},
			"children": [
				{
					"id": 119,
					"name": "latest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Latest version number"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/dist-tags.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						119
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/dist-tags.ts",
					"line": 4,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 120,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"comment": {
					"shortText": "Mapping of distribution tags to version numbers"
				},
				"parameters": [
					{
						"id": 121,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "string"
				}
			}
		},
		{
			"id": 145,
			"name": "DownloadsPerDay",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`DownloadsPerDay` lists the number of downloads in a given day."
			},
			"children": [
				{
					"id": 147,
					"name": "day",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Day date"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 68,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 146,
					"name": "downloads",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Total number of downloads in the day"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 65,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						147,
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/downloads.ts",
					"line": 63,
					"character": 17
				}
			]
		},
		{
			"id": 148,
			"name": "GitRepository",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`GitRepository` represents a git repository hosting\nthe source code of a package.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link Repository}\n"
					}
				]
			},
			"children": [
				{
					"id": 151,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Specific directory in the repository\n(for example, a directory in a monorepo)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/git-repository.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 149,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository type, always `git`"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/git-repository.ts",
							"line": 9,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "git"
					}
				},
				{
					"id": 150,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/git-repository.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						151,
						149,
						150
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/git-repository.ts",
					"line": 7,
					"character": 17
				}
			]
		},
		{
			"id": 152,
			"name": "NpmOperationalInternal",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 153,
					"name": "host",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/npm-operational-internal.ts",
							"line": 2,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 154,
					"name": "tmp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/npm-operational-internal.ts",
							"line": 3,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						153,
						154
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/npm-operational-internal.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 127,
			"name": "PackageDownloads",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`PackageDownloads` lists the number of downloads for a package\nin a given time period.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link RegistryDownloads}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#point-values}\n"
					}
				]
			},
			"children": [
				{
					"id": 129,
					"name": "downloads",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Total number of downloads"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 21,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 133,
						"name": "RegistryDownloads.downloads"
					}
				},
				{
					"id": 131,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the last day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 135,
						"name": "RegistryDownloads.end"
					}
				},
				{
					"id": 128,
					"name": "package",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 10,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 130,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the first day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 24,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 134,
						"name": "RegistryDownloads.start"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						129,
						131,
						128,
						130
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/downloads.ts",
					"line": 8,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 132,
					"name": "RegistryDownloads"
				}
			]
		},
		{
			"id": 419,
			"name": "PackageFlags",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`PackageFlags` contains flag attributes categorizing the package."
			},
			"children": [
				{
					"id": 421,
					"name": "insecure",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "If true, package is insecure or has vulnerable dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 167,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 420,
					"name": "unstable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "If true, package version is `<1.0.0`"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 164,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						421,
						420
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-results.ts",
					"line": 162,
					"character": 17
				}
			]
		},
		{
			"id": 155,
			"name": "PackageJSON",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`PackageJSON` contains the package metadata\nusually found in `package.json` files.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor some packages, especially legacy ones,\nthe properties may be mistyped due to incorrect data present on the registry.\n"
					},
					{
						"tag": "see",
						"text": "{@link https://docs.npmjs.com/cli/v6/configuring-npm/package-json}\n"
					}
				]
			},
			"children": [
				{
					"id": 163,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Author of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 42,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					}
				},
				{
					"id": 182,
					"name": "bin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Executable files"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 119,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": ".pnpm",
								"name": "Record"
							}
						]
					}
				},
				{
					"id": 176,
					"name": "browser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Browser)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 97,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 167,
					"name": "bugs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bug tracker",
						"tags": [
							{
								"tag": "see",
								"text": "{@link BugTracker}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 70,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 108,
						"name": "BugTracker"
					}
				},
				{
					"id": 172,
					"name": "bundleDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bundled dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 85,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 173,
					"name": "bundledDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bundled dependencies (alias)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 88,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 186,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm config"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 131,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 165,
					"name": "contributors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Contributors to the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					}
				},
				{
					"id": 189,
					"name": "cpu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "CPU compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 140,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 168,
					"name": "dependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Runtime dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 73,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 192,
					"name": "deprecated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Deprecation message"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 149,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 158,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package description"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 169,
					"name": "devDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Development dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 76,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 184,
					"name": "directories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Directories describing the package's structure"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 125,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 187,
					"name": "engines",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Node compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 134,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 180,
					"name": "exports",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Export map",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://nodejs.org/api/packages.html#packages_subpath_exports}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 113,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"qualifiedName": "Record",
								"package": ".pnpm",
								"name": "Record"
							}
						]
					}
				},
				{
					"id": 181,
					"name": "files",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "File patterns included in the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 116,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 159,
					"name": "homepage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Homepage URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 162,
					"name": "keywords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Keywords describing the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 160,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "SPDX license identifier"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 161,
					"name": "licenseText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Text of the license"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 32,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 175,
					"name": "main",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Node)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 94,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 164,
					"name": "maintainers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Maintainers of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 49,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					}
				},
				{
					"id": 183,
					"name": "man",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Man pages"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 122,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 177,
					"name": "module",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Modules)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 100,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 156,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 171,
					"name": "optionalDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Optional dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 82,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 188,
					"name": "os",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "OS compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 137,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 170,
					"name": "peerDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Peer dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 79,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 190,
					"name": "private",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Prevent publishing"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 143,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 191,
					"name": "publishConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Publishing configuration"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 146,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 193,
					"name": "readme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "README contents"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 152,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 194,
					"name": "readmeFilename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Name of the README file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 155,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 166,
					"name": "repository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository containing the package's source",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Repository}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 63,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 374,
								"name": "Repository"
							}
						]
					}
				},
				{
					"id": 185,
					"name": "scripts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm scripts"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 128,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 174,
					"name": "source",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main source file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 91,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 178,
					"name": "types",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Type declarations file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 103,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 179,
					"name": "typings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Type declarations file (alias)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 106,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 157,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package version number"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 20,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						163,
						182,
						176,
						167,
						172,
						173,
						186,
						165,
						189,
						168,
						192,
						158,
						169,
						184,
						187,
						180,
						181,
						159,
						162,
						160,
						161,
						175,
						164,
						183,
						177,
						156,
						171,
						188,
						170,
						190,
						191,
						193,
						194,
						166,
						185,
						174,
						178,
						179,
						157
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/package-json.ts",
					"line": 15,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 195,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"comment": {
					"shortText": "Other fields"
				},
				"parameters": [
					{
						"id": 196,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "unknown"
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"id": 284,
					"name": "RawPackageManifest"
				}
			]
		},
		{
			"id": 405,
			"name": "PackageLinks",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`PackageLinks` contains a collection of links of pages associated to the package."
			},
			"children": [
				{
					"id": 409,
					"name": "bugs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 123,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 407,
					"name": "homepage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 121,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 406,
					"name": "npm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 120,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 408,
					"name": "repository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 122,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						409,
						407,
						406,
						408
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-results.ts",
					"line": 119,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 410,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 411,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				}
			}
		},
		{
			"id": 197,
			"name": "PackageManifest",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`PackageManifest` represents the manifest describing a specific version\n of a package.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor some packages, especially legacy ones,\nthe properties may be mistyped due to incorrect data present on the registry.\n"
					},
					{
						"tag": "see",
						"text": "{@link RawPackageManifest}\n"
					}
				]
			},
			"children": [
				{
					"id": 214,
					"name": "_hasShrinkwrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "True if the package has a shrinkwrap file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 61,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "RawPackageManifest._hasShrinkwrap"
					}
				},
				{
					"id": 205,
					"name": "_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package version ID (for example, `foo@1.0.0` or `@bar/baz@1.0.0`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 22,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "RawPackageManifest._id"
					}
				},
				{
					"id": 211,
					"name": "_nodeVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Node version used when publishing"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 48,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "RawPackageManifest._nodeVersion"
					}
				},
				{
					"id": 213,
					"name": "_npmOperationalInternal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Internal npm data",
						"tags": [
							{
								"tag": "see",
								"text": "{@link NpmOperationalInternal}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 58,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 152,
						"name": "NpmOperationalInternal"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "RawPackageManifest._npmOperationalInternal"
					}
				},
				{
					"id": 210,
					"name": "_npmUser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "User who published this package version",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 45,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "RawPackageManifest._npmUser"
					}
				},
				{
					"id": 212,
					"name": "_npmVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm version used when publishing"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "RawPackageManifest._npmVersion"
					}
				},
				{
					"id": 219,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Author of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 42,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "RawPackageManifest.author"
					}
				},
				{
					"id": 238,
					"name": "bin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Executable files"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 119,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": ".pnpm",
								"name": "Record"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "RawPackageManifest.bin"
					}
				},
				{
					"id": 232,
					"name": "browser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Browser)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 97,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "RawPackageManifest.browser"
					}
				},
				{
					"id": 223,
					"name": "bugs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bug tracker",
						"tags": [
							{
								"tag": "see",
								"text": "{@link BugTracker}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 70,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 108,
						"name": "BugTracker"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "RawPackageManifest.bugs"
					}
				},
				{
					"id": 228,
					"name": "bundleDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bundled dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 85,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "RawPackageManifest.bundleDependencies"
					}
				},
				{
					"id": 229,
					"name": "bundledDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bundled dependencies (alias)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 88,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "RawPackageManifest.bundledDependencies"
					}
				},
				{
					"id": 242,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm config"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 131,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "RawPackageManifest.config"
					}
				},
				{
					"id": 221,
					"name": "contributors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Contributors to the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 302,
						"name": "RawPackageManifest.contributors"
					}
				},
				{
					"id": 245,
					"name": "cpu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "CPU compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 140,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "RawPackageManifest.cpu"
					}
				},
				{
					"id": 199,
					"name": "createdAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Publishing timestamp"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
							"line": 20,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 203,
					"name": "definitelyTypedName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Name of the corresponding DefinitelyTyped package, if any"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
							"line": 36,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 224,
					"name": "dependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Runtime dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 73,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "RawPackageManifest.dependencies"
					}
				},
				{
					"id": 248,
					"name": "deprecated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Deprecation message"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 149,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "RawPackageManifest.deprecated"
					}
				},
				{
					"id": 215,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package description"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "RawPackageManifest.description"
					}
				},
				{
					"id": 225,
					"name": "devDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Development dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 76,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "RawPackageManifest.devDependencies"
					}
				},
				{
					"id": 240,
					"name": "directories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Directories describing the package's structure"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 125,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "RawPackageManifest.directories"
					}
				},
				{
					"id": 208,
					"name": "dist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Distribution data from the registry",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistInfo}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 111,
						"name": "DistInfo"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "RawPackageManifest.dist"
					}
				},
				{
					"id": 243,
					"name": "engines",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Node compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 134,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "RawPackageManifest.engines"
					}
				},
				{
					"id": 236,
					"name": "exports",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Export map",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://nodejs.org/api/packages.html#packages_subpath_exports}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 113,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"qualifiedName": "Record",
								"package": ".pnpm",
								"name": "Record"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "RawPackageManifest.exports"
					}
				},
				{
					"id": 237,
					"name": "files",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "File patterns included in the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 116,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "RawPackageManifest.files"
					}
				},
				{
					"id": 209,
					"name": "gitHead",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Commit hash corresponding to the published version"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 38,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "RawPackageManifest.gitHead"
					}
				},
				{
					"id": 202,
					"name": "gitRepository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Normalized git repository"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
							"line": 33,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 148,
						"name": "GitRepository"
					}
				},
				{
					"id": 216,
					"name": "homepage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Homepage URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "RawPackageManifest.homepage"
					}
				},
				{
					"id": 198,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package version ID (for example, `foo@1.0.0` or `@bar/baz@1.0.0`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 218,
					"name": "keywords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Keywords describing the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "RawPackageManifest.keywords"
					}
				},
				{
					"id": 201,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Normalized license"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
							"line": 30,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 297,
						"name": "RawPackageManifest.license"
					}
				},
				{
					"id": 217,
					"name": "licenseText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Text of the license"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 32,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "RawPackageManifest.licenseText"
					}
				},
				{
					"id": 231,
					"name": "main",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Node)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 94,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "RawPackageManifest.main"
					}
				},
				{
					"id": 220,
					"name": "maintainers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Maintainers of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 49,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 301,
						"name": "RawPackageManifest.maintainers"
					}
				},
				{
					"id": 239,
					"name": "man",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Man pages"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 122,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "RawPackageManifest.man"
					}
				},
				{
					"id": 233,
					"name": "module",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Modules)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 100,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "RawPackageManifest.module"
					}
				},
				{
					"id": 206,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "RawPackageManifest.name"
					}
				},
				{
					"id": 227,
					"name": "optionalDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Optional dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 82,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "RawPackageManifest.optionalDependencies"
					}
				},
				{
					"id": 244,
					"name": "os",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "OS compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 137,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "RawPackageManifest.os"
					}
				},
				{
					"id": 226,
					"name": "peerDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Peer dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 79,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "RawPackageManifest.peerDependencies"
					}
				},
				{
					"id": 246,
					"name": "private",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Prevent publishing"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 143,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "RawPackageManifest.private"
					}
				},
				{
					"id": 247,
					"name": "publishConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Publishing configuration"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 146,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "RawPackageManifest.publishConfig"
					}
				},
				{
					"id": 200,
					"name": "publisher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "User who published this version of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					}
				},
				{
					"id": 249,
					"name": "readme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "README contents"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 152,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "RawPackageManifest.readme"
					}
				},
				{
					"id": 250,
					"name": "readmeFilename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Name of the README file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 155,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "RawPackageManifest.readmeFilename"
					}
				},
				{
					"id": 222,
					"name": "repository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository containing the package's source",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Repository}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 63,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 374,
								"name": "Repository"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "RawPackageManifest.repository"
					}
				},
				{
					"id": 241,
					"name": "scripts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm scripts"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 128,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "RawPackageManifest.scripts"
					}
				},
				{
					"id": 230,
					"name": "source",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main source file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 91,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "RawPackageManifest.source"
					}
				},
				{
					"id": 234,
					"name": "types",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Type declarations file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 103,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "RawPackageManifest.types"
					}
				},
				{
					"id": 235,
					"name": "typings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Type declarations file (alias)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 106,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "RawPackageManifest.typings"
					}
				},
				{
					"id": 204,
					"name": "untypedName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Name of the corresponding untyped package (w.r.t. DefinitelyTyped)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
							"line": 39,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 207,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package version number"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "RawPackageManifest.version"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						214,
						205,
						211,
						213,
						210,
						212,
						219,
						238,
						232,
						223,
						228,
						229,
						242,
						221,
						245,
						199,
						203,
						224,
						248,
						215,
						225,
						240,
						208,
						243,
						236,
						237,
						209,
						202,
						216,
						198,
						218,
						201,
						217,
						231,
						220,
						239,
						233,
						206,
						227,
						244,
						226,
						246,
						247,
						200,
						249,
						250,
						222,
						241,
						230,
						234,
						235,
						204,
						207
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/package-manifest.ts",
					"line": 15,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 284,
					"name": "RawPackageManifest"
				}
			]
		},
		{
			"id": 394,
			"name": "PackageSearchResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`PackageSearchResult` contains abbreviated package metadata returned\nby searching the registry for packages.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link Person}"
					},
					{
						"tag": "see",
						"text": "{@link PackageLinks}\n"
					}
				]
			},
			"children": [
				{
					"id": 403,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package author",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 106,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					}
				},
				{
					"id": 398,
					"name": "date",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Publishing timestamp for the latest version"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 79,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 401,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package description"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 96,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 402,
					"name": "keywords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Keywords describing the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 99,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 400,
					"name": "links",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Links for pages associated to the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link PackageLinks}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 93,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 405,
						"name": "PackageLinks"
					}
				},
				{
					"id": 404,
					"name": "maintainers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package maintainers",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 113,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					}
				},
				{
					"id": 395,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 70,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 399,
					"name": "publisher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package publisher",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 86,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					}
				},
				{
					"id": 397,
					"name": "scope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package scope; either `unscoped` or the package's scope"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 76,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 396,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Latest package version number"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 73,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						403,
						398,
						401,
						402,
						400,
						404,
						395,
						399,
						397,
						396
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-results.ts",
					"line": 68,
					"character": 17
				}
			]
		},
		{
			"id": 251,
			"name": "Packument",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`Packument` represents a packument (package document)\ncontaining all the data about a package.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor some packages, especially legacy ones,\nthe properties may be mistyped due to incorrect data present on the registry.\n"
					},
					{
						"tag": "see",
						"text": "{@link RawPackument}\n"
					}
				]
			},
			"children": [
				{
					"id": 257,
					"name": "_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Unique package name (for example, `foo` or `@bar/baz`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 21,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "RawPackument._id"
					}
				},
				{
					"id": 258,
					"name": "_rev",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Latest revision ID in CouchDB"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 24,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "RawPackument._rev"
					}
				},
				{
					"id": 264,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Author of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 42,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "RawPackument.author"
					}
				},
				{
					"id": 265,
					"name": "bugs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bug tracker",
						"tags": [
							{
								"tag": "see",
								"text": "{@link BugTracker}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 70,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 108,
						"name": "BugTracker"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "RawPackument.bugs"
					}
				},
				{
					"id": 266,
					"name": "contributors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Contributors to the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "RawPackument.contributors"
					}
				},
				{
					"id": 267,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package description"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "RawPackument.description"
					}
				},
				{
					"id": 260,
					"name": "dist-tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of distribution tags to version numbers",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistTags}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 118,
						"name": "DistTags"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "RawPackument.dist-tags"
					}
				},
				{
					"id": 253,
					"name": "distTags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of distribution tags to version numbers\n(alias to `dist-tags`)",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistTags}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/packument.ts",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 118,
						"name": "DistTags"
					}
				},
				{
					"id": 256,
					"name": "gitRepository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Normalized git repository"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/packument.ts",
							"line": 43,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 148,
						"name": "GitRepository"
					}
				},
				{
					"id": 268,
					"name": "homepage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Homepage URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "RawPackument.homepage"
					}
				},
				{
					"id": 252,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Unique package name (for example, `foo` or `@bar/baz`;\nalias to `_id`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/packument.ts",
							"line": 20,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 269,
					"name": "keywords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Keywords describing the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "RawPackument.keywords"
					}
				},
				{
					"id": 255,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Normalized license"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/packument.ts",
							"line": 40,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 346,
						"name": "RawPackument.license"
					}
				},
				{
					"id": 270,
					"name": "maintainers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Maintainers of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 49,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "RawPackument.maintainers"
					}
				},
				{
					"id": 259,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "RawPackument.name"
					}
				},
				{
					"id": 271,
					"name": "readme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "README contents"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 152,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "RawPackument.readme"
					}
				},
				{
					"id": 272,
					"name": "readmeFilename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Name of the README file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 155,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "RawPackument.readmeFilename"
					}
				},
				{
					"id": 273,
					"name": "repository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository containing the package's source",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Repository}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 63,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 374,
								"name": "Repository"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "RawPackument.repository"
					}
				},
				{
					"id": 261,
					"name": "time",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of version numbers to publishing timestamps",
						"tags": [
							{
								"tag": "see",
								"text": "{@link VersionsToTimestamps}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 41,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 422,
						"name": "VersionsToTimestamps"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "RawPackument.time"
					}
				},
				{
					"id": 263,
					"name": "users",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Names of the npm users who starred the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "RawPackument.users"
					}
				},
				{
					"id": 262,
					"name": "versions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of version numbers to package manifests",
						"tags": [
							{
								"tag": "see",
								"text": "{@link RawPackageManifest}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 48,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 284,
								"name": "RawPackageManifest"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "RawPackument.versions"
					}
				},
				{
					"id": 254,
					"name": "versionsToTimestamps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of version numbers to publishing timestamps\nwithout the `created` or `modified` properties\npresent in the `time` property",
						"tags": [
							{
								"tag": "see",
								"text": "{@link VersionsToTimestamps}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/packument.ts",
							"line": 37,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						257,
						258,
						264,
						265,
						266,
						267,
						260,
						253,
						256,
						268,
						252,
						269,
						255,
						270,
						259,
						271,
						272,
						273,
						261,
						263,
						262,
						254
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/packument.ts",
					"line": 15,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 332,
					"name": "RawPackument"
				}
			]
		},
		{
			"id": 274,
			"name": "Person",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`Person` represents a person associated to a package."
			},
			"children": [
				{
					"id": 277,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/person.ts",
							"line": 7,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 275,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/person.ts",
							"line": 5,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 278,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/person.ts",
							"line": 8,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 276,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/person.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						277,
						275,
						278,
						276
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/person.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 279,
			"name": "RawAbbreviatedPackument",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`RawAbbreviatedPackument` represents an abbreviated packument (package document),\nas returned from the registry, containing only the metadata necessary to install a package.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md#abbreviated-metadata-format}\n"
					}
				]
			},
			"children": [
				{
					"id": 282,
					"name": "dist-tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of distribution tags to version numbers",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistTags}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 118,
						"name": "DistTags"
					}
				},
				{
					"id": 281,
					"name": "modified",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Timestamp of when the package was last modified\nin ISO 8601 format (for example, `2021-11-23T19:12:24.006Z`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 280,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 283,
					"name": "versions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of version numbers to package manifests",
						"tags": [
							{
								"tag": "see",
								"text": "{@link RawPackageManifest}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
							"line": 32,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 284,
										"name": "RawPackageManifest"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "version"
											},
											{
												"type": "literal",
												"value": "dist"
											},
											{
												"type": "literal",
												"value": "deprecated"
											},
											{
												"type": "literal",
												"value": "dependencies"
											},
											{
												"type": "literal",
												"value": "optionalDependencies"
											},
											{
												"type": "literal",
												"value": "devDependencies"
											},
											{
												"type": "literal",
												"value": "bundleDependencies"
											},
											{
												"type": "literal",
												"value": "peerDependencies"
											},
											{
												"type": "literal",
												"value": "bin"
											},
											{
												"type": "literal",
												"value": "directories"
											},
											{
												"type": "literal",
												"value": "engines"
											},
											{
												"type": "literal",
												"value": "_hasShrinkwrap"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": ".pnpm",
								"name": "Pick"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						282,
						281,
						280,
						283
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/raw-abbreviated-packument.ts",
					"line": 10,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 100,
					"name": "AbbreviatedPackument"
				}
			]
		},
		{
			"id": 284,
			"name": "RawPackageManifest",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`RawPackageManifest` represents the manifest, as returned by the registry,\ndescribing a specific version of a package.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor some packages, especially legacy ones,\nthe properties may be mistyped due to incorrect data present on the registry.\n"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#getpackageversion}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md#abbreviated-version-object}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md#full-metadata-format}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#version}"
					},
					{
						"tag": "see",
						"text": "{@link PackageJSON}\n"
					}
				]
			},
			"children": [
				{
					"id": 294,
					"name": "_hasShrinkwrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "True if the package has a shrinkwrap file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 61,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 285,
					"name": "_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package version ID (for example, `foo@1.0.0` or `@bar/baz@1.0.0`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 22,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 291,
					"name": "_nodeVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Node version used when publishing"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 48,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 293,
					"name": "_npmOperationalInternal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Internal npm data",
						"tags": [
							{
								"tag": "see",
								"text": "{@link NpmOperationalInternal}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 58,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 152,
						"name": "NpmOperationalInternal"
					}
				},
				{
					"id": 290,
					"name": "_npmUser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "User who published this package version",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 45,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					}
				},
				{
					"id": 292,
					"name": "_npmVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm version used when publishing"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 300,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Author of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 42,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 163,
						"name": "PackageJSON.author"
					}
				},
				{
					"id": 319,
					"name": "bin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Executable files"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 119,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": ".pnpm",
								"name": "Record"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 182,
						"name": "PackageJSON.bin"
					}
				},
				{
					"id": 313,
					"name": "browser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Browser)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 97,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 176,
						"name": "PackageJSON.browser"
					}
				},
				{
					"id": 304,
					"name": "bugs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bug tracker",
						"tags": [
							{
								"tag": "see",
								"text": "{@link BugTracker}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 70,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 108,
						"name": "BugTracker"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 167,
						"name": "PackageJSON.bugs"
					}
				},
				{
					"id": 309,
					"name": "bundleDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bundled dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 85,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 172,
						"name": "PackageJSON.bundleDependencies"
					}
				},
				{
					"id": 310,
					"name": "bundledDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bundled dependencies (alias)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 88,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 173,
						"name": "PackageJSON.bundledDependencies"
					}
				},
				{
					"id": 323,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm config"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 131,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 186,
						"name": "PackageJSON.config"
					}
				},
				{
					"id": 302,
					"name": "contributors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Contributors to the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 165,
						"name": "PackageJSON.contributors"
					}
				},
				{
					"id": 326,
					"name": "cpu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "CPU compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 140,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 189,
						"name": "PackageJSON.cpu"
					}
				},
				{
					"id": 305,
					"name": "dependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Runtime dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 73,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 168,
						"name": "PackageJSON.dependencies"
					}
				},
				{
					"id": 329,
					"name": "deprecated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Deprecation message"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 149,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 192,
						"name": "PackageJSON.deprecated"
					}
				},
				{
					"id": 295,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package description"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 158,
						"name": "PackageJSON.description"
					}
				},
				{
					"id": 306,
					"name": "devDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Development dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 76,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 169,
						"name": "PackageJSON.devDependencies"
					}
				},
				{
					"id": 321,
					"name": "directories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Directories describing the package's structure"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 125,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 184,
						"name": "PackageJSON.directories"
					}
				},
				{
					"id": 288,
					"name": "dist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Distribution data from the registry",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistInfo}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 111,
						"name": "DistInfo"
					}
				},
				{
					"id": 324,
					"name": "engines",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Node compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 134,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 187,
						"name": "PackageJSON.engines"
					}
				},
				{
					"id": 317,
					"name": "exports",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Export map",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://nodejs.org/api/packages.html#packages_subpath_exports}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 113,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"qualifiedName": "Record",
								"package": ".pnpm",
								"name": "Record"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 180,
						"name": "PackageJSON.exports"
					}
				},
				{
					"id": 318,
					"name": "files",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "File patterns included in the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 116,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 181,
						"name": "PackageJSON.files"
					}
				},
				{
					"id": 289,
					"name": "gitHead",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Commit hash corresponding to the published version"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 38,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 296,
					"name": "homepage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Homepage URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 159,
						"name": "PackageJSON.homepage"
					}
				},
				{
					"id": 299,
					"name": "keywords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Keywords describing the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 162,
						"name": "PackageJSON.keywords"
					}
				},
				{
					"id": 297,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "SPDX license identifier"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 160,
						"name": "PackageJSON.license"
					}
				},
				{
					"id": 298,
					"name": "licenseText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Text of the license"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 32,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 161,
						"name": "PackageJSON.licenseText"
					}
				},
				{
					"id": 312,
					"name": "main",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Node)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 94,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 175,
						"name": "PackageJSON.main"
					}
				},
				{
					"id": 301,
					"name": "maintainers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Maintainers of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 49,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 164,
						"name": "PackageJSON.maintainers"
					}
				},
				{
					"id": 320,
					"name": "man",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Man pages"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 122,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 183,
						"name": "PackageJSON.man"
					}
				},
				{
					"id": 314,
					"name": "module",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main file (Modules)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 100,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 177,
						"name": "PackageJSON.module"
					}
				},
				{
					"id": 286,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 156,
						"name": "PackageJSON.name"
					}
				},
				{
					"id": 308,
					"name": "optionalDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Optional dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 82,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 171,
						"name": "PackageJSON.optionalDependencies"
					}
				},
				{
					"id": 325,
					"name": "os",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "OS compatibility"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 137,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 188,
						"name": "PackageJSON.os"
					}
				},
				{
					"id": 307,
					"name": "peerDependencies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Peer dependencies"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 79,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 170,
						"name": "PackageJSON.peerDependencies"
					}
				},
				{
					"id": 327,
					"name": "private",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Prevent publishing"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 143,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 190,
						"name": "PackageJSON.private"
					}
				},
				{
					"id": 328,
					"name": "publishConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Publishing configuration"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 146,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 191,
						"name": "PackageJSON.publishConfig"
					}
				},
				{
					"id": 330,
					"name": "readme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "README contents"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 152,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 193,
						"name": "PackageJSON.readme"
					}
				},
				{
					"id": 331,
					"name": "readmeFilename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Name of the README file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 155,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 194,
						"name": "PackageJSON.readmeFilename"
					}
				},
				{
					"id": 303,
					"name": "repository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository containing the package's source",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Repository}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 63,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 374,
								"name": "Repository"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 166,
						"name": "PackageJSON.repository"
					}
				},
				{
					"id": 322,
					"name": "scripts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "npm scripts"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 128,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 185,
						"name": "PackageJSON.scripts"
					}
				},
				{
					"id": 311,
					"name": "source",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Main source file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 91,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 174,
						"name": "PackageJSON.source"
					}
				},
				{
					"id": 315,
					"name": "types",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Type declarations file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 103,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 178,
						"name": "PackageJSON.types"
					}
				},
				{
					"id": 316,
					"name": "typings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Type declarations file (alias)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 106,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 179,
						"name": "PackageJSON.typings"
					}
				},
				{
					"id": 287,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package version number"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 157,
						"name": "PackageJSON.version"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						294,
						285,
						291,
						293,
						290,
						292,
						300,
						319,
						313,
						304,
						309,
						310,
						323,
						302,
						326,
						305,
						329,
						295,
						306,
						321,
						288,
						324,
						317,
						318,
						289,
						296,
						299,
						297,
						298,
						312,
						301,
						320,
						314,
						286,
						308,
						325,
						307,
						327,
						328,
						330,
						331,
						303,
						322,
						311,
						315,
						316,
						287
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/raw-package-manifest.ts",
					"line": 20,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 155,
					"name": "PackageJSON"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 197,
					"name": "PackageManifest"
				}
			]
		},
		{
			"id": 332,
			"name": "RawPackument",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`RawPackument` represents a packument (package document), as returned\nfrom the registry, containing all the data about a package .",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor some packages, especially legacy ones,\nthe properties may be mistyped due to incorrect data present on the registry.\n"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#getpackage}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md#full-metadata-format}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#package}"
					},
					{
						"tag": "see",
						"text": "{@link HoistedPackageJSON}\n"
					}
				]
			},
			"children": [
				{
					"id": 333,
					"name": "_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Unique package name (for example, `foo` or `@bar/baz`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 21,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 334,
					"name": "_rev",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Latest revision ID in CouchDB"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 24,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 340,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Author of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 42,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 274,
						"name": "Person"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.author"
					}
				},
				{
					"id": 341,
					"name": "bugs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Bug tracker",
						"tags": [
							{
								"tag": "see",
								"text": "{@link BugTracker}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 70,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 108,
						"name": "BugTracker"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.bugs"
					}
				},
				{
					"id": 342,
					"name": "contributors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Contributors to the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.contributors"
					}
				},
				{
					"id": 343,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package description"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.description"
					}
				},
				{
					"id": 336,
					"name": "dist-tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of distribution tags to version numbers",
						"tags": [
							{
								"tag": "see",
								"text": "{@link DistTags}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 118,
						"name": "DistTags"
					}
				},
				{
					"id": 344,
					"name": "homepage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Homepage URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.homepage"
					}
				},
				{
					"id": 345,
					"name": "keywords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Keywords describing the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.keywords"
					}
				},
				{
					"id": 346,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "SPDX license identifier"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.license"
					}
				},
				{
					"id": 347,
					"name": "maintainers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Maintainers of the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Person}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 49,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 274,
							"name": "Person"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.maintainers"
					}
				},
				{
					"id": 335,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package name"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 348,
					"name": "readme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "README contents"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 152,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.readme"
					}
				},
				{
					"id": 349,
					"name": "readmeFilename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Name of the README file"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 155,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.readmeFilename"
					}
				},
				{
					"id": 350,
					"name": "repository",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository containing the package's source",
						"tags": [
							{
								"tag": "see",
								"text": "{@link Repository}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/package-json.ts",
							"line": 63,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 374,
								"name": "Repository"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HoistedPackageJSON.repository"
					}
				},
				{
					"id": 337,
					"name": "time",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of version numbers to publishing timestamps",
						"tags": [
							{
								"tag": "see",
								"text": "{@link VersionsToTimestamps}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 41,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 422,
						"name": "VersionsToTimestamps"
					}
				},
				{
					"id": 339,
					"name": "users",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Names of the npm users who starred the package"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				},
				{
					"id": 338,
					"name": "versions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Mapping of version numbers to package manifests",
						"tags": [
							{
								"tag": "see",
								"text": "{@link RawPackageManifest}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
							"line": 48,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 284,
								"name": "RawPackageManifest"
							}
						],
						"qualifiedName": "Record",
						"package": ".pnpm",
						"name": "Record"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						333,
						334,
						340,
						341,
						342,
						343,
						336,
						344,
						345,
						346,
						347,
						335,
						348,
						349,
						350,
						337,
						339,
						338
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
					"line": 19,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 351,
					"name": "HoistedPackageJSON"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 251,
					"name": "Packument"
				}
			]
		},
		{
			"id": 132,
			"name": "RegistryDownloads",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`RegistryDownloads` lists the number of downloads for the registry\n in a given time period.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#point-values}\n"
					}
				]
			},
			"children": [
				{
					"id": 133,
					"name": "downloads",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Total number of downloads"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 21,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 135,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the last day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 134,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date of the first day (inclusive)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/downloads.ts",
							"line": 24,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						133,
						135,
						134
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/downloads.ts",
					"line": 19,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 127,
					"name": "PackageDownloads"
				}
			]
		},
		{
			"id": 352,
			"name": "RegistryMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`RegistryMetadata` contains information about the registry itself.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#registry}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#get}"
					},
					{
						"tag": "see",
						"text": "{@link RegistryMetadataOther}"
					},
					{
						"tag": "see",
						"text": "{@link RegistryMetadataSizes}\n"
					}
				]
			},
			"children": [
				{
					"id": 363,
					"name": "committed_update_seq",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 21,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 358,
					"name": "compact_running",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 364,
					"name": "compacted_seq",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 22,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 360,
					"name": "data_size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 353,
					"name": "db_name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Database name, usually `registry`"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 362,
					"name": "disk_format_version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 20,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 359,
					"name": "disk_size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 354,
					"name": "doc_count",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 355,
					"name": "doc_del_count",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 13,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 361,
					"name": "instance_start_time",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 19,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 366,
					"name": "other",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 24,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 368,
						"name": "RegistryMetadataOther"
					}
				},
				{
					"id": 357,
					"name": "purge_seq",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 15,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 367,
					"name": "sizes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 370,
						"name": "RegistryMetadataSizes"
					}
				},
				{
					"id": 356,
					"name": "update_seq",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 365,
					"name": "uuid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						363,
						358,
						364,
						360,
						353,
						362,
						359,
						354,
						355,
						361,
						366,
						357,
						367,
						356,
						365
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
					"line": 9,
					"character": 17
				}
			]
		},
		{
			"id": 368,
			"name": "RegistryMetadataOther",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 369,
					"name": "data_size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						369
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
					"line": 28,
					"character": 17
				}
			]
		},
		{
			"id": 370,
			"name": "RegistryMetadataSizes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 372,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 34,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 373,
					"name": "external",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 371,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
							"line": 33,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						372,
						373,
						371
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/registry-metadata.ts",
					"line": 32,
					"character": 17
				}
			]
		},
		{
			"id": 374,
			"name": "Repository",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`Repository` represents a remote repository hosting\nthe source code of a package.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://docs.npmjs.com/cli/v6/configuring-npm/package-json#repository}.\n"
					}
				]
			},
			"children": [
				{
					"id": 377,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Specific directory in the repository containing the package\n(for example, a directory in a monorepo)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/repository.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 375,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository type (for example, `git`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/repository.ts",
							"line": 9,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 376,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Repository's URL"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/repository.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						377,
						375,
						376
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/repository.ts",
					"line": 7,
					"character": 17
				}
			]
		},
		{
			"id": 378,
			"name": "SearchCriteria",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`SearchCriteria` represents the available search criteria.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#get-v1search}\n"
					}
				]
			},
			"children": [
				{
					"id": 381,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Return results from this offset"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-criteria.ts",
							"line": 41,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 384,
					"name": "maintenance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package maintenance influence on results (from `0.0` to `1.0`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-criteria.ts",
							"line": 50,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 383,
					"name": "popularity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package popularity influence on results (from `0.0` to `1.0`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-criteria.ts",
							"line": 47,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 382,
					"name": "quality",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package quality influence on results (from `0.0` to `1.0`)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-criteria.ts",
							"line": 44,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 380,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Number of results to return (from `0` to `250`; default: `20` on the npm registry)"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-criteria.ts",
							"line": 38,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 379,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Query text",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe following special text attributes can be used to refine results:\n\n- `author:<name>`: show packages from the given author\n  (for example, `author:someone`)\n\n- `maintainer:<name>`: show packages with the given maintainer\n  (for example, `maintainer:someone`)\n\n- `keywords:<keyword list>`: show packages matching the given keyword(s);\n  separators `,`, `+` and `,-` mean respectively `OR`, `AND` and `NOT`\n  (for example, use `keywords:foo,bar+baz,-quux` to include keywords `foo`\n  or `bar` and `baz` but not `quux`)\n\n- `not:unstable`: exclude unstable packages (version `<1.0.0`)\n\n- `not:insecure`: exclude insecure packages\n\n- `is:unstable`: include only unstable packages (version `<1.0.0`)\n\n- `is:insecure`: include only insecure packages\n\n- `boost-exact:<true/false>`: boost packages with exact name match\n  (default: `true`)\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-criteria.ts",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						381,
						384,
						383,
						382,
						380,
						379
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-criteria.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 389,
			"name": "SearchResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`SearchResult` contains the search result for a single package\n and its search score.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link PackageSearchResult}"
					},
					{
						"tag": "see",
						"text": "{@link SearchScore}"
					},
					{
						"tag": "see",
						"text": "{@link PackageFlags}\n"
					}
				]
			},
			"children": [
				{
					"id": 393,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Flag attributes for the package",
						"tags": [
							{
								"tag": "see",
								"text": "{@link PackageFlags}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 58,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 419,
						"name": "PackageFlags"
					}
				},
				{
					"id": 390,
					"name": "package",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Abbreviated package metadata",
						"tags": [
							{
								"tag": "see",
								"text": "{@link PackageSearchResult}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 41,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 394,
						"name": "PackageSearchResult"
					}
				},
				{
					"id": 391,
					"name": "score",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Final and detailed search score values",
						"tags": [
							{
								"tag": "see",
								"text": "{@link SearchScore}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 48,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 412,
						"name": "SearchScore"
					}
				},
				{
					"id": 392,
					"name": "searchScore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Search score value; may be different from `score.final`"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						393,
						390,
						391,
						392
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-results.ts",
					"line": 35,
					"character": 17
				}
			]
		},
		{
			"id": 385,
			"name": "SearchResults",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`SearchResults` contains the results returned by the registry for a query.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link SearchResult}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#get-v1search}\n"
					}
				]
			},
			"children": [
				{
					"id": 386,
					"name": "objects",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "List of search results",
						"tags": [
							{
								"tag": "see",
								"text": "{@link SearchResult}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 15,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 389,
							"name": "SearchResult"
						}
					}
				},
				{
					"id": 388,
					"name": "time",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Date at which the search happened"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 24,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 387,
					"name": "total",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Total number of search results corresponding to a query;\nmay be higher than the number of `objects`"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 21,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						386,
						388,
						387
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-results.ts",
					"line": 9,
					"character": 17
				}
			]
		},
		{
			"id": 412,
			"name": "SearchScore",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`SearchScore` contains the final and detailed search score values.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link SearchScoreDetail}\n"
					}
				]
			},
			"children": [
				{
					"id": 414,
					"name": "detail",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Detailed search score values",
						"tags": [
							{
								"tag": "see",
								"text": "{@link SearchScoreDetail}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 141,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 415,
						"name": "SearchScoreDetail"
					}
				},
				{
					"id": 413,
					"name": "final",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Final search score value, computed from the detailed scores"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 134,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						414,
						413
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-results.ts",
					"line": 132,
					"character": 17
				}
			]
		},
		{
			"id": 415,
			"name": "SearchScoreDetail",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`SearchScoreDetail` contains the search score values for the\nquality, popularity and maintenance categories."
			},
			"children": [
				{
					"id": 418,
					"name": "maintenance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package maintenance score value"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 156,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 417,
					"name": "popularity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package popularity score value"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 153,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 416,
					"name": "quality",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package quality score value"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/search-results.ts",
							"line": 150,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						418,
						417,
						416
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/search-results.ts",
					"line": 148,
					"character": 17
				}
			]
		},
		{
			"id": 422,
			"name": "VersionsToTimestamps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "`VersionsToTimestamps` maps version numbers to their publishing timestamps."
			},
			"children": [
				{
					"id": 423,
					"name": "created",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Package creation time"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/versions-to-timestamps.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 424,
					"name": "modified",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"shortText": "Last package update time"
					},
					"sources": [
						{
							"fileName": "stage/node-query-registry/src/types/versions-to-timestamps.ts",
							"line": 9,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						423,
						424
					]
				}
			],
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/versions-to-timestamps.ts",
					"line": 4,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 425,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"comment": {
					"shortText": "Mapping of version numbers to publishing timestamps"
				},
				"parameters": [
					{
						"id": 426,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "string"
				}
			}
		},
		{
			"id": 123,
			"name": "DefaultDownloadPeriod",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "`DefaultDownloadPeriod` represents the default time periods\nsupported by the npm registry."
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/download-period.ts",
					"line": 24,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "last-day"
					},
					{
						"type": "literal",
						"value": "last-week"
					},
					{
						"type": "literal",
						"value": "last-month"
					},
					{
						"type": "literal",
						"value": "last-year"
					}
				]
			}
		},
		{
			"id": 122,
			"name": "DownloadPeriod",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "`DownloadPeriod` represents a time period\nfor which downloads should be counted.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nThe following time periods are supported:\n\n- a {@link DefaultDownloadPeriod} (for example, `last-week`)\n\n- a date for a single day (for example, `new Date('2020-01-01')`)\n\n- a {@link DateRange}\n"
					},
					{
						"tag": "see",
						"text": "{@link DefaultDownloadPeriod}"
					},
					{
						"tag": "see",
						"text": "{@link DateRange}"
					},
					{
						"tag": "see",
						"text": "{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/download-period.ts",
					"line": 18,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 123,
						"name": "DefaultDownloadPeriod"
					},
					{
						"type": "reference",
						"qualifiedName": "Date",
						"package": ".pnpm",
						"name": "Date"
					},
					{
						"type": "reference",
						"id": 124,
						"name": "DateRange"
					}
				]
			}
		},
		{
			"id": 351,
			"name": "HoistedPackageJSON",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "`HoistedPackageJSON` contains the data hoisted\nfrom the latest package version into the packument.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor some packages, especially legacy ones,\nthe properties may be mistyped due to incorrect data present on the registry.\n"
					},
					{
						"tag": "see",
						"text": "{@link PackageJSON}"
					},
					{
						"tag": "see",
						"text": "{@link RawPackument}"
					},
					{
						"tag": "see",
						"text": "{@link https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md#full-metadata-format}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/types/raw-packument.ts",
					"line": 66,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 155,
						"name": "PackageJSON"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "author"
							},
							{
								"type": "literal",
								"value": "bugs"
							},
							{
								"type": "literal",
								"value": "contributors"
							},
							{
								"type": "literal",
								"value": "description"
							},
							{
								"type": "literal",
								"value": "homepage"
							},
							{
								"type": "literal",
								"value": "keywords"
							},
							{
								"type": "literal",
								"value": "license"
							},
							{
								"type": "literal",
								"value": "maintainers"
							},
							{
								"type": "literal",
								"value": "readme"
							},
							{
								"type": "literal",
								"value": "readmeFilename"
							},
							{
								"type": "literal",
								"value": "repository"
							}
						]
					}
				],
				"qualifiedName": "Pick",
				"package": ".pnpm",
				"name": "Pick"
			},
			"extendedBy": [
				{
					"type": "reference",
					"id": 332,
					"name": "RawPackument"
				}
			]
		},
		{
			"id": 447,
			"name": "InvalidPackageNameError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "`InvalidPackageNameError` is thrown when the name of a package\nis not valid according to the npm registry naming rules.",
				"text": "The `instanceof` operator can be used to check for this error.\n",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://www.npmjs.com/package/validate-npm-package-name}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/utils/errors.ts",
					"line": 30,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"qualifiedName": "makeError.BaseError",
						"package": ".pnpm",
						"name": "BaseError"
					}
				],
				"qualifiedName": "makeError.Constructor",
				"package": ".pnpm",
				"name": "Constructor"
			},
			"defaultValue": "..."
		},
		{
			"id": 448,
			"name": "InvalidPackageVersionError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "`InvalidPackageVersionError` is thrown when a package's version does not exist.",
				"text": "The `instanceof` operator can be used to check for this error.\n"
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/utils/errors.ts",
					"line": 37,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"qualifiedName": "makeError.BaseError",
						"package": ".pnpm",
						"name": "BaseError"
					}
				],
				"qualifiedName": "makeError.Constructor",
				"package": ".pnpm",
				"name": "Constructor"
			},
			"defaultValue": "..."
		},
		{
			"id": 2,
			"name": "cloudflareRegistry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "npm registry mirror by Cloudflare",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nThis registry has CORS enabled and can be used to retrieve\npackage manifests and packuments in the browser.\n"
					},
					{
						"tag": "see",
						"text": "{@link https://npmjs.cf}"
					},
					{
						"tag": "see",
						"text": "{@link https://registry.npmjs.cf}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/data/registries.ts",
					"line": 18,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "https://registry.npmjs.cf"
			},
			"defaultValue": "'https://registry.npmjs.cf'"
		},
		{
			"id": 1,
			"name": "npmRegistry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "npm registry",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://registry.npmjs.org}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/data/registries.ts",
					"line": 6,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "https://registry.npmjs.org"
			},
			"defaultValue": "'https://registry.npmjs.org'"
		},
		{
			"id": 5,
			"name": "npmRegistryDownloadsAPI",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Downloads API for the npm registry",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://api.npmjs.org}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/data/registries.ts",
					"line": 40,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "https://api.npmjs.org"
			},
			"defaultValue": "'https://api.npmjs.org'"
		},
		{
			"id": 4,
			"name": "npmRegistryMirrors",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Mirrors of the npm registry.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link cloudflareRegistry}"
					},
					{
						"tag": "see",
						"text": "{@link yarnRegistry}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/data/registries.ts",
					"line": 33,
					"character": 13
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 3,
			"name": "yarnRegistry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "npm registry mirror by Yarn",
				"tags": [
					{
						"tag": "see",
						"text": "{@link https://registry.yarnpkg.com}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/data/registries.ts",
					"line": 25,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "https://registry.yarnpkg.com"
			},
			"defaultValue": "'https://registry.yarnpkg.com'"
		},
		{
			"id": 6,
			"name": "getAbbreviatedPackument",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-abbreviated-packument.ts",
					"line": 36,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 7,
					"name": "getAbbreviatedPackument",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getAbbreviatedPackument` returns the abbreviated packument (package document)\ncontaining only the metadata necessary to install a package present on the registry.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nTo get all the metadata (full packument) about a package see {@link getPackument}.\n"
							},
							{
								"tag": "example",
								"text": "\nGet the abbreviated packument for package `query-registry` from the npm registry:\n\n```typescript\nimport { getAbbreviatedPackument } from 'query-registry';\n\n(async () => {\n    const packument = await getAbbreviatedPackument({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(packument.name);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link AbbreviatedPackument}"
							},
							{
								"tag": "see",
								"text": "{@link RawAbbreviatedPackument}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryMirrors}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 8,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 9,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 13,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-abbreviated-packument.ts",
													"line": 45,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 12,
											"name": "mirrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-abbreviated-packument.ts",
													"line": 44,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 10,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-abbreviated-packument.ts",
													"line": 42,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-abbreviated-packument.ts",
													"line": 43,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13,
												12,
												10,
												11
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 100,
								"name": "AbbreviatedPackument"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 14,
			"name": "getDailyPackageDownloads",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-daily-package-downloads.ts",
					"line": 55,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 15,
					"name": "getDailyPackageDownloads",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getDailyPackageDownloads` returns the number of downloads for a package\nfor each day in a given time period.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the day by day weekly downloads for package `query-registry` from the npm registry:\n\n```typescript\nimport { getDailyPackageDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getDailyPackageDownloads({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(downloads.package);\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads[0].downloads);\n})();\n```\n"
							},
							{
								"tag": "example",
								"text": "\nGet the day by day monthly downloads for package `query-registry` from the npm registry:\n\n```typescript\nimport { getDailyPackageDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getDailyPackageDownloads({ name: 'query-registry', period: 'last-month' });\n\n    // Output: 'query-registry'\n    console.log(downloads.package);\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads[0].downloads);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link DailyPackageDownloads}"
							},
							{
								"tag": "see",
								"text": "{@link DownloadPeriod}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryDownloadsAPI}"
							},
							{
								"tag": "see",
								"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#ranges}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 16,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 21,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-daily-package-downloads.ts",
													"line": 64,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 18,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-daily-package-downloads.ts",
													"line": 61,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 19,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-daily-package-downloads.ts",
													"line": 62,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 122,
												"name": "DownloadPeriod"
											}
										},
										{
											"id": 20,
											"name": "registryDownloadsAPI",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-daily-package-downloads.ts",
													"line": 63,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21,
												18,
												19,
												20
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 136,
								"name": "DailyPackageDownloads"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 22,
			"name": "getDailyRegistryDownloads",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-daily-registry-downloads.ts",
					"line": 47,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 23,
					"name": "getDailyRegistryDownloads",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getDailyRegistryDownloads` returns the number of downloads for all registry packages\nfor each day in a given time period.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the day by day weekly downloads for the npm registry:\n\n```typescript\nimport { getDailyRegistryDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getDailyRegistryDownloads();\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads[0].downloads);\n})();\n```\n"
							},
							{
								"tag": "example",
								"text": "\nGet the day by day monthly downloads for the npm registry:\n\n```typescript\nimport { getDailyRegistryDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getDailyRegistryDownloads({ period: 'last-month' });\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads[0].downloads);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link DailyRegistryDownloads}"
							},
							{
								"tag": "see",
								"text": "{@link DownloadPeriod}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryDownloadsAPI}"
							},
							{
								"tag": "see",
								"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#ranges}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 24,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 25,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 28,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-daily-registry-downloads.ts",
													"line": 54,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 26,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-daily-registry-downloads.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 122,
												"name": "DownloadPeriod"
											}
										},
										{
											"id": 27,
											"name": "registryDownloadsAPI",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-daily-registry-downloads.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												28,
												26,
												27
											]
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 141,
								"name": "DailyRegistryDownloads"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 29,
			"name": "getPackageDownloads",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-package-downloads.ts",
					"line": 55,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 30,
					"name": "getPackageDownloads",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getPackageDownloads` returns the number of downloads for a package\nin a given time period.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the weekly downloads for package `query-registry` from the npm registry:\n\n```typescript\nimport { getPackageDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getPackageDownloads({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(downloads.package);\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads);\n})();\n```\n"
							},
							{
								"tag": "example",
								"text": "\nGet the monthly downloads for package `query-registry` from the npm registry:\n\n```typescript\nimport { getPackageDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getPackageDownloads({ name: 'query-registry', period: 'last-month' });\n\n    // Output: 'query-registry'\n    console.log(downloads.package);\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link PackageDownloads}"
							},
							{
								"tag": "see",
								"text": "{@link DownloadPeriod}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryDownloadsAPI}"
							},
							{
								"tag": "see",
								"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#point-values}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 31,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 36,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-downloads.ts",
													"line": 64,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 33,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-downloads.ts",
													"line": 61,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-downloads.ts",
													"line": 62,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 122,
												"name": "DownloadPeriod"
											}
										},
										{
											"id": 35,
											"name": "registryDownloadsAPI",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-downloads.ts",
													"line": 63,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												36,
												33,
												34,
												35
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 127,
								"name": "PackageDownloads"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 37,
			"name": "getPackageManifest",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-package-manifest.ts",
					"line": 52,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 38,
					"name": "getPackageManifest",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getPackageManifest` returns the manifest describing\na specific version of a package.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the latest manifest for package `query-registry` from the npm registry:\n\n```typescript\nimport { getPackageManifest } from 'query-registry';\n\n(async () => {\n    const manifest = await getPackageManifest({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(manifest.name);\n})();\n```\n"
							},
							{
								"tag": "example",
								"text": "\nGet the manifest for package `query-registry@1.0.0` from the npm registry:\n\n```typescript\nimport { getPackageManifest } from 'query-registry';\n\n(async () => {\n    const manifest = await getPackageManifest({ name: 'query-registry', version: '1.0.0' });\n\n    // Output: 'query-registry'\n    console.log(manifest.name);\n\n    // Output: '1.0.0'\n    console.log(manifest.version);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link PackageManifest}"
							},
							{
								"tag": "see",
								"text": "{@link RawPackageManifest}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryMirrors}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 39,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 45,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-manifest.ts",
													"line": 63,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 44,
											"name": "mirrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-manifest.ts",
													"line": 62,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 41,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-manifest.ts",
													"line": 59,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-manifest.ts",
													"line": 61,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 42,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-package-manifest.ts",
													"line": 60,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												45,
												44,
												41,
												43,
												42
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 197,
								"name": "PackageManifest"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 46,
			"name": "getPackument",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-packument.ts",
					"line": 33,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 47,
					"name": "getPackument",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getPackument` returns the packument (package document) containing\nall the metadata about a package present on the registry.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the packument for package `query-registry` from the npm registry:\n\n```typescript\nimport { getPackument } from 'query-registry';\n\n(async () => {\n    const packument = await getPackument({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(packument.name);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link Packument}"
							},
							{
								"tag": "see",
								"text": "{@link RawPackument}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryMirrors}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 48,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 49,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 53,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-packument.ts",
													"line": 42,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 52,
											"name": "mirrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-packument.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 50,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-packument.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 51,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-packument.ts",
													"line": 40,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												53,
												52,
												50,
												51
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 251,
								"name": "Packument"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 54,
			"name": "getRawAbbreviatedPackument",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-raw-abbreviated-packument.ts",
					"line": 34,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 55,
					"name": "getRawAbbreviatedPackument",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getRawAbbreviatedPackument` returns the abbreviated packument (package document)\ncontaining only the metadata necessary to install a package present on the registry.",
						"text": "Note: the abbreviated packument is returned as retrieved from the registry.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the abbreviated packument for package `query-registry` from the npm registry:\n\n```typescript\nimport { getRawAbbreviatedPackument } from 'query-registry';\n\n(async () => {\n    const packument = await getRawAbbreviatedPackument({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(packument.name);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link RawAbbreviatedPackument}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryMirrors}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 56,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 61,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-abbreviated-packument.ts",
													"line": 43,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 60,
											"name": "mirrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-abbreviated-packument.ts",
													"line": 42,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 58,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-abbreviated-packument.ts",
													"line": 40,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-abbreviated-packument.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												61,
												60,
												58,
												59
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 279,
								"name": "RawAbbreviatedPackument"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 62,
			"name": "getRawPackageManifest",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-raw-package-manifest.ts",
					"line": 52,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 63,
					"name": "getRawPackageManifest",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getRawPackageManifest` returns the manifest describing\na specific version of a package.",
						"text": "Note: the manifest is returned as retrieved from the registry.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the latest manifest for package `query-registry` from the npm registry:\n\n```typescript\nimport { getRawPackageManifest } from 'query-registry';\n\n(async () => {\n    const manifest = await getRawPackageManifest({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(manifest.name);\n})();\n```\n"
							},
							{
								"tag": "example",
								"text": "\nGet the manifest for package `query-registry@1.0.0` from the npm registry:\n\n```typescript\nimport { getRawPackageManifest } from 'query-registry';\n\n(async () => {\n    const manifest = await getRawPackageManifest({ name: 'query-registry', version: '1.0.0' });\n\n    // Output: 'query-registry'\n    console.log(manifest.name);\n\n    // Output: '1.0.0'\n    console.log(manifest.version);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link RawPackageManifest}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryMirrors}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 64,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 65,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 70,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-package-manifest.ts",
													"line": 63,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 69,
											"name": "mirrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-package-manifest.ts",
													"line": 62,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 66,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-package-manifest.ts",
													"line": 59,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 68,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-package-manifest.ts",
													"line": 61,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 67,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-package-manifest.ts",
													"line": 60,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												70,
												69,
												66,
												68,
												67
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 284,
								"name": "RawPackageManifest"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 71,
			"name": "getRawPackument",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-raw-packument.ts",
					"line": 34,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 72,
					"name": "getRawPackument",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getRawPackument` returns the packument (package document) containing\nall the metadata about a package present on the registry.",
						"text": "Note: the packument is returned as retrieved from the registry.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the packument for package `query-registry` from the npm registry:\n\n```typescript\nimport { getRawPackument } from 'query-registry';\n\n(async () => {\n    const packument = await getRawPackument({ name: 'query-registry' });\n\n    // Output: 'query-registry'\n    console.log(packument.name);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link RawPackument}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryMirrors}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 73,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 74,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 78,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-packument.ts",
													"line": 43,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 77,
											"name": "mirrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-packument.ts",
													"line": 42,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 75,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-packument.ts",
													"line": 40,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 76,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-raw-packument.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												78,
												77,
												75,
												76
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 332,
								"name": "RawPackument"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 79,
			"name": "getRegistryDownloads",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-registry-downloads.ts",
					"line": 47,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 80,
					"name": "getRegistryDownloads",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getRegistryDownloads` returns the number of downloads for all registry packages\nin a given time period.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the weekly downloads for the npm registry:\n\n```typescript\nimport { getRegistryDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getRegistryDownloads();\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads);\n})();\n```\n"
							},
							{
								"tag": "example",
								"text": "\nGet the monthly downloads for the npm registry:\n\n```typescript\nimport { getRegistryDownloads } from 'query-registry';\n\n(async () => {\n    const downloads = await getRegistryDownloads({ period: 'last-month' });\n\n    // Output: 'number'\n    console.log(typeof downloads.downloads);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link RegistryDownloads}"
							},
							{
								"tag": "see",
								"text": "{@link DownloadPeriod}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryDownloadsAPI}"
							},
							{
								"tag": "see",
								"text": "{@link https://github.com/npm/registry/blob/master/docs/download-counts.md#point-values}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 81,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 82,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 85,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-registry-downloads.ts",
													"line": 54,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 83,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-registry-downloads.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 122,
												"name": "DownloadPeriod"
											}
										},
										{
											"id": 84,
											"name": "registryDownloadsAPI",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-registry-downloads.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												85,
												83,
												84
											]
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 132,
								"name": "RegistryDownloads"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 86,
			"name": "getRegistryMetadata",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/get-registry-metadata.ts",
					"line": 38,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 87,
					"name": "getRegistryMetadata",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`getRegistryMetadata` returns the metadata describing the registry itself.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the metadata for the npm registry:\n\n```typescript\nimport { getRegistryMetadata } from 'query-registry';\n\n(async () => {\n    const metadata = await getRegistryMetadata();\n\n    // Output: 'registry'\n    console.log(metadata.db_name);\n})();\n```\n"
							},
							{
								"tag": "example",
								"text": "\nGet the metadata for a custom registry:\n\n```typescript\nimport { getRegistryMetadata } from 'query-registry';\n\n(async () => {\n    const metadata = await getRegistryMetadata({ registry: 'https://example.com' });\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link RegistryMetadata}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 88,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 89,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 91,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-registry-metadata.ts",
													"line": 43,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 90,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/get-registry-metadata.ts",
													"line": 42,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												91,
												90
											]
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 352,
								"name": "RegistryMetadata"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 92,
			"name": "searchPackages",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "stage/node-query-registry/src/endpoints/search-packages.ts",
					"line": 33,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 93,
					"name": "searchPackages",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "`searchPackages` returns the packages corresponding to a given query.",
						"tags": [
							{
								"tag": "example",
								"text": "\nGet the search results for text query `query-registry` from the npm registry:\n\n```typescript\nimport { searchPackages } from 'query-registry';\n\n(async () => {\n    const results = await searchPackages({ query: { text: 'query-registry' } });\n\n    // Output: 'query-registry'\n    console.log(results.objects[0].package.name);\n})();\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link SearchResults}"
							},
							{
								"tag": "see",
								"text": "{@link SearchCriteria}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistry}"
							},
							{
								"tag": "see",
								"text": "{@link npmRegistryMirrors}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 94,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 95,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 99,
											"name": "cached",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/search-packages.ts",
													"line": 42,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 98,
											"name": "mirrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/search-packages.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 96,
											"name": "query",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/search-packages.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 378,
												"name": "SearchCriteria"
											}
										},
										{
											"id": 97,
											"name": "registry",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "stage/node-query-registry/src/endpoints/search-packages.ts",
													"line": 40,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												99,
												98,
												96,
												97
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 385,
								"name": "SearchResults"
							}
						],
						"qualifiedName": "Promise",
						"package": ".pnpm",
						"name": "Promise"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				427
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				100,
				108,
				136,
				141,
				124,
				111,
				118,
				145,
				148,
				152,
				127,
				419,
				155,
				405,
				197,
				394,
				251,
				274,
				279,
				284,
				332,
				132,
				352,
				368,
				370,
				374,
				378,
				389,
				385,
				412,
				415,
				422
			]
		},
		{
			"title": "Type Aliases",
			"kind": 4194304,
			"children": [
				123,
				122,
				351
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				447,
				448,
				2,
				1,
				5,
				4,
				3
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				6,
				14,
				22,
				29,
				37,
				46,
				54,
				62,
				71,
				79,
				86,
				92
			]
		}
	],
	"sources": [
		{
			"fileName": "stage/node-query-registry/src/index.ts",
			"line": 92,
			"character": 0
		}
	]
}